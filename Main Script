// VARIABLES ---------------------------------------------------------------------------------------------------------------

var id = getColumn("Pollution Table", "id");
var difficultyLevel = "";
var health = 100;

// ELEMENTS --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

var carbonMonoxide = getColumn("Pollution Table", "CO(GT)");
var benzene = getColumn("Pollution Table", "C6H6(GT)");
var titaniumDioxide = getColumn("Pollution Table", "PT08.S2(NMHC)");

// FIXED ELEMENTS --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// These lists include all of the data from 2004-2005 but have removed the "undefined" data that appears on page 19
var fixedCarbonMonoxide = [];
var fixedBenzene = [];
var fixedTitaniumDioxide = [];

// FUNCTIONS -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// Filters the lists to remove the "undefined" data that code.org adds to the dataset
function filterRelavance(stopNumber){

  for (var i = 0; i < id[stopNumber]; i += 1){
    
    appendItem(fixedCarbonMonoxide, carbonMonoxide[i]);
    appendItem(fixedBenzene, benzene[i]);
    appendItem(fixedTitaniumDioxide, titaniumDioxide[i]);
  }
}

// Because traversing through around 10,000 elements can take some time, there is a loading screen
function startGameNow(){
  
  // Alerts the user the game has finished loading
  playSound("sound://category_bell/vibrant_game_slot_machine_ding_1.mp3");
  setText("loadingText", "Get Ready!");
  
  setTimeout(function(){
    
    // Redirects the user to the start screen
    setScreen("mainTitle");
  }, 2000);
}

// Not necessary but it sort of adds realism in which this app really feels like a game 
function transitionAssets(){
  
  // Stops the main page background music
  stopSound("Cursed-Nintendo-Images-but-with-Super-Mario-Bros-music.mp3");
  playSound("sound://category_bell/vibrant_game_slot_machine_ding_1.mp3");
  
  setScreen("loadingScreen");
  setText("loadingText", "Loading ...");

  setTimeout(function(){
    
    playSound("Coconut-Mall-ed.mp3", true);
    
    // Redirects the user to the game screen (actual content)
    setScreen("gameScreen");
  }, 2000);
}

// LEFT CASTLE ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

function leftCastle(){
  
  // FINISH TOMORROW
  if (difficultyLevel == "benzene"){

    var randomBenzene = fixedBenzene[randomNumber(0, fixedBenzene.length - 1)];
    console.log(randomBenzene);
    
  }
  
  
}

// STAYED HOME -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

function stayedHome(){
  
  
  
}

// MAIN SETUP ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// Runs the filterRelavance function
filterRelavance(9356);

// Removes the user from the loading screen
startGameNow();
playSound("Cursed-Nintendo-Images-but-with-Super-Mario-Bros-music.mp3", true);

// Start button is clicked
onEvent("beginButton", "click", function(){
  
  // You are sent to the select difficulty screen
  playSound("sound://category_bell/vibrant_game_slot_machine_ding_1.mp3");
  setScreen("difficultyScreen");
});

// -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// You have chosen easy difficulty, Mario has high benzene resistance
onEvent("easyButton", "click", function(){
  
  transitionAssets();

  // Tells the program what element it needs to analyse from the dataset
  difficultyLevel = "benzene";
});

// You have chosen intermediate difficulty, Mario is new to this pollutant
onEvent("midButton", "click", function(){
  
  transitionAssets();

  // Tells the program what element it needs to analyse from the dataset
  difficultyLevel = "CO";
});

// You have chosen hard difficulty, Titanium Dioxide is Mario's weakness
onEvent("intenseButton", "click", function(){
  
  transitionAssets();
  
  // Tells the program what element it needs to analyse from the dataset
  difficultyLevel = "tDioxide";
});

// Sends you back to the main page
onEvent("backButton", "click", function(){
  
  playSound("sound://category_bell/vibrant_game_slot_machine_ding_1.mp3");
  setScreen("mainTitle");
});

// -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

onEvent("outButton", "click", leftCastle);
onEvent("stayHomeButton", "click", stayedHome);

// WORKS CITED ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

var documentation = "https://github.com/Larrieeee/Hackathon-COCO-M";
console.log("Documentation: " + documentation);

